{"ast":null,"code":"var _jsxFileName = \"/var/www/html/spacex-feed-app/src/component/Upcominglaunches.js\";\nimport React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport './Upcominglaunches.css';\n\nconst classes = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  card: {\n    maxWidth: 345,\n    maxHeight: 500\n  },\n  media: {\n    height: 140\n  }\n});\n\nclass UpcomingLaunches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UpcomingLaunches: [],\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.spacexdata.com/v3/launches/upcoming\").then(res => res.json()).then(findresponse => {\n      try {\n        this.setState({\n          UpcomingLaunches: findresponse\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      console.log(\"response of launches\", this.state.UpcomingLaunches);\n    }).catch(err => {\n      console.log({\n        status: 500,\n        message: 'Internal Server Error',\n        err\n      });\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const isFetching = this.state.isFetching;\n    let displaydata;\n    console.log(\"upcoming launches\", this.state.UpcomingLaunches); // if (!isFetching && this.state.UpcomingLaunches)\n    // displaydata = \n    // )\n\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Upcoming Launches\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.UpcomingLaunches.map(spacedata => React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.media,\n      title: \"Contemplative Reptile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, spacedata.rocket.rocket_name && spacedata.mission_name), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))))), React.createElement(Grid, {\n      item: true,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.media,\n      image: \"/static/img/falcon9.38367f2.jpg\",\n      title: \"Contemplative Reptile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, spacedata.rocket.rocket_name && spacedata.mission_name), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nUpcomingLaunches.propTypes = {\n  container: PropTypes.object\n};\nexport default withStyles(classes)(UpcomingLaunches);","map":{"version":3,"sources":["/var/www/html/spacex-feed-app/src/component/Upcominglaunches.js"],"names":["React","Component","Card","CardActionArea","Typography","CardContent","CardMedia","Grid","PropTypes","withStyles","classes","theme","root","flexGrow","card","maxWidth","maxHeight","media","height","UpcomingLaunches","constructor","props","state","isFetching","componentDidMount","fetch","then","res","json","findresponse","setState","err","console","log","catch","status","message","render","displaydata","map","spacedata","rocket","rocket_name","mission_name","propTypes","container","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport './Upcominglaunches.css'\n\nconst classes = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    card: {\n        maxWidth: 345,\n        maxHeight: 500\n    },\n    media: {\n        height: 140,\n    },\n});\n\nclass UpcomingLaunches extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            UpcomingLaunches: [],\n            isFetching: true\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.spacexdata.com/v3/launches/upcoming\")\n            .then(res => res.json())\n            .then((findresponse) => {\n                try {\n                    this.setState({\n                        UpcomingLaunches: findresponse\n                    })\n                } catch (err) {\n                    console.log(err);\n                }\n                console.log(\"response of launches\", this.state.UpcomingLaunches);\n            })\n            .catch((err) => {\n                console.log({ status: 500, message: 'Internal Server Error', err });\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { isFetching } = this.state;\n        let displaydata;\n        console.log(\"upcoming launches\", this.state.UpcomingLaunches);\n\n        // if (!isFetching && this.state.UpcomingLaunches)\n        // displaydata = \n        // )\n\n        return (\n            <div className={classes.root}>\n                <h2>Upcoming Launches</h2>\n                <div>\n                    {\n                        this.state.UpcomingLaunches.map(spacedata =>\n                            <Grid container spacing={3}>\n                                <Grid item xs={6}>\n                                    <Card className={classes.card}>\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                    \n                                                title=\"Contemplative Reptile\"\n                                            />\n                                            <CardContent>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                    {spacedata.rocket.rocket_name && spacedata.mission_name}\n                                                </Typography>\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                   \n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Card>\n                                </Grid>\n                                <Grid item md={6}>\n                                    <Card className={classes.card}>\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image=\"/static/img/falcon9.38367f2.jpg\"\n                                                title=\"Contemplative Reptile\"\n                                            />\n                                            <CardContent>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                    {spacedata.rocket.rocket_name && spacedata.mission_name}\n                                                </Typography>\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                   \n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        )}\n                </div>\n            </div>\n\n        )\n    }\n}\nUpcomingLaunches.propTypes = {\n    container: PropTypes.object,\n};\n\nexport default withStyles(classes)(UpcomingLaunches);"]},"metadata":{},"sourceType":"module"}