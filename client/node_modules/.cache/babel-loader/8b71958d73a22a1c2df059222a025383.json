{"ast":null,"code":"var _jsxFileName = \"/var/www/html/spacex-feed-app/src/component/Upcominglaunches.js\";\nimport React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst classes = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n});\n\nclass UpcomingLaunches extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UpcomingLaunches: [],\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.spacexdata.com/v3/launches/upcoming\").then(res => res.json()).then(findresponse => {\n      try {\n        this.setState({\n          UpcomingLaunches: findresponse\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      console.log(\"response of launches\", this.state.UpcomingLaunches);\n    }).catch(err => {\n      console.log({\n        status: 500,\n        message: 'Internal Server Error',\n        err\n      });\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    if (!isFetching && this.state.data[0]) displaydata = this.state.data[0].trends.map(trends => React.createElement(List, {\n      key: trends.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, [trends.name].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))));\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"xs=6\")), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"xs=6\"))));\n  }\n\n}\n\nUpcomingLaunches.propTypes = {\n  container: PropTypes.object\n};\nexport default withStyles(classes)(UpcomingLaunches);","map":{"version":3,"sources":["/var/www/html/spacex-feed-app/src/component/Upcominglaunches.js"],"names":["React","Component","makeStyles","Paper","Grid","PropTypes","withStyles","classes","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","UpcomingLaunches","constructor","props","state","isFetching","componentDidMount","fetch","then","res","json","findresponse","setState","err","console","log","catch","status","message","render","data","displaydata","trends","map","name","index","propTypes","container","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst classes = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass UpcomingLaunches extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            UpcomingLaunches: [],\n            isFetching:true\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.spacexdata.com/v3/launches/upcoming\")\n            .then(res => res.json())\n            .then((findresponse) => {\n                try {\n                    this.setState({\n                        UpcomingLaunches: findresponse\n                    })\n                } catch (err) {\n                    console.log(err);\n                }\n                console.log(\"response of launches\", this.state.UpcomingLaunches);\n            })\n            .catch((err) => {\n                console.log({ status: 500, message: 'Internal Server Error', err });\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        if (!isFetching && this.state.data[0]) displaydata = this.state.data[0].trends.map(trends =>\n            <List key={trends.name}>\n                {[trends.name].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        )\n\n        return (\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                        <Paper className={classes.paper}>xs=6</Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Paper className={classes.paper}>xs=6</Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nUpcomingLaunches.propTypes = {\n    container: PropTypes.object,\n};\n\nexport default withStyles(classes)(UpcomingLaunches);"]},"metadata":{},"sourceType":"module"}