{"ast":null,"code":"var _jsxFileName = \"/var/www/html/spacex-feed-app/client/src/component/Twitter.js\";\nimport React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport Grid from '@material-ui/core/Grid';\nimport API from '../service/twitter.service.js';\nimport { Player } from 'video-react';\nimport './twitter.css';\n\nclass Twitter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TwitterLaunches: [],\n      value: \"SpaceX\"\n    };\n  }\n\n  componentDidMount() {\n    /** Twitter Launches spacex */\n    API.getTwitterLaunches().then(data => {\n      console.log(\"data===\", data);\n\n      try {\n        if (!data.length) {\n          // Swal.fire('Tweets Not Found....');\n          this.componentDidMount();\n        } else {\n          this.setState({\n            TwitterLaunches: data\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      console.log(\"twitter launches====\", this.state.TwitterLaunches);\n    }).catch(err => {\n      console.log({\n        status: 500,\n        message: 'Internal Server Error',\n        err\n      });\n    });\n  }\n  /** Render-app */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Tweets\"), React.createElement(Grid, {\n      container: true,\n      spacing: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"this.state.TwitterLaunches.map(searchelement =>\", React.createElement(\"div\", {\n      className: \"tweet_class_search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile_image_post1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: searchelement.user.profile_image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"username_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, searchelement.user.name), React.createElement(\"a\", {\n      className: \"mdc-list-item trends-color\",\n      target: \"_blank\",\n      href: \"http://twitter.com/\" + searchelement.user.screen_name,\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"@\", searchelement.user.screen_name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, searchelement.text)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, searchelement.extended_entities ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, searchelement.extended_entities ? React.createElement(\"img\", {\n      className: \"search-tweet-imag\",\n      src: searchelement.extended_entities.media[0].media_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : '') : React.createElement(\"div\", {\n      className: \"video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, searchelement.extended_entities ? React.createElement(Player, {\n      className: \"video_height\",\n      src: searchelement.extended_entities.media[0].video_info.variants[1].url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : ''))))), \")\")));\n  }\n\n}\n\nexport default Twitter;","map":{"version":3,"sources":["/var/www/html/spacex-feed-app/client/src/component/Twitter.js"],"names":["React","Component","Grid","API","Player","Twitter","constructor","props","state","TwitterLaunches","value","componentDidMount","getTwitterLaunches","then","data","console","log","length","setState","err","catch","status","message","render","searchelement","user","profile_image_url","name","screen_name","text","extended_entities","media","media_url","video_info","variants","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport Grid from '@material-ui/core/Grid';\nimport API from '../service/twitter.service.js';\nimport { Player } from 'video-react';\nimport './twitter.css';\n\n\n\nclass Twitter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            TwitterLaunches: [],\n            value: \"SpaceX\"\n        }\n    }\n\n    componentDidMount() {\n        /** Twitter Launches spacex */\n        API.getTwitterLaunches()\n            .then((data) => {\n                console.log(\"data===\", data);\n                try {\n                    if (!data.length) {\n                        // Swal.fire('Tweets Not Found....');\n                        this.componentDidMount();\n                    } else {\n                        this.setState({\n                            TwitterLaunches: data\n                        })\n                    }\n                } catch (err) {\n                    console.log(err);\n                }\n                console.log(\"twitter launches====\", this.state.TwitterLaunches);\n            })\n            .catch((err) => {\n                console.log({ status: 500, message: 'Internal Server Error', err });\n            })\n    }\n\n    /** Render-app */\n    render() {\n        return (\n            <div>\n                <h2>Tweets</h2>\n                {\n                    <Grid container spacing={12}>\n                        <Grid item sm={6}>\n                            this.state.TwitterLaunches.map(searchelement =>\n                        <div className=\"tweet_class_search\">\n                                <Grid container spacing={12}>\n\n                                    <Grid item sm={2}>\n                                        <div className=\"profile_image_post1\">\n                                            <img src={searchelement.user.profile_image_url} />\n                                        </div>\n                                    </Grid>\n                                    <Grid item sm={10}>\n                                        <span className=\"username_title\">{searchelement.user.name}</span>\n                                        <a className=\"mdc-list-item trends-color\" target=\"_blank\" href={\"http://twitter.com/\" + searchelement.user.screen_name} aria-current=\"page\">\n                                            <span className=\"gray\">@{searchelement.user.screen_name}</span>\n                                        </a>\n                                        <p><span>{searchelement.text}</span></p>\n                                        <div>\n                                            {searchelement.extended_entities ? (<div>\n                                                {searchelement.extended_entities ? (<img className=\"search-tweet-imag\" src={searchelement.extended_entities.media[0].media_url} />) : ('')}\n                                            </div>) : (<div className=\"video\">\n                                                {searchelement.extended_entities ? (<Player className=\"video_height\" src={searchelement.extended_entities.media[0].video_info.variants[1].url}></Player>) : ('')}\n                                            </div>)}\n\n                                        </div>\n                                    </Grid>\n\n                                </Grid>\n                            </div>\n                            )\n                    </Grid>\n                    </Grid>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Twitter;"]},"metadata":{},"sourceType":"module"}