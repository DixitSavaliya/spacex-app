{"ast":null,"code":"var _jsxFileName = \"/var/www/html/spacex-feed-app/client/src/component/Twitter.js\";\nimport React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport Grid from '@material-ui/core/Grid';\nimport API from '../service/twitter.service.js';\nimport { Player } from 'video-react';\nimport './twitter.css';\nimport './video.css';\n\nclass Twitter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TwitterLaunches: [],\n      TwitterMask: []\n    };\n  }\n\n  componentDidMount() {\n    /** Twitter Launches spacex */\n    API.getTwitterLaunches().then(data => {\n      try {\n        if (!data.length) {\n          // Swal.fire('Tweets Not Found....');\n          this.componentDidMount();\n        } else {\n          this.setState({\n            TwitterLaunches: data\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      console.log(\"twitter launches====\", this.state.TwitterLaunches);\n    }).catch(err => {\n      console.log({\n        status: 500,\n        message: 'Internal Server Error',\n        err\n      });\n    });\n    /** Twitter Launches spacex */\n\n    API.getTwittersLaunches().then(data => {\n      try {\n        if (!data.length) {\n          // Swal.fire('Tweets Not Found....');\n          this.componentDidMount();\n        } else {\n          this.setState({\n            TwitterMask: data\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      console.log(\"twitter mask====\", this.state.TwitterMask);\n    }).catch(err => {\n      console.log({\n        status: 500,\n        message: 'Internal Server Error',\n        err\n      });\n    });\n  }\n  /** Render-app */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xl: 6,\n      md: 6,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Tweets \", React.createElement(\"span\", {\n      className: \"font_size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"by\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"mdc-list-item trends-color top\",\n      target: \"_blank\",\n      href: \"https://twitter.com/SpaceX\",\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"font_size1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" @SpaceX\"))))), React.createElement(Grid, {\n      item: true,\n      xl: 6,\n      md: 6,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Tweets \", React.createElement(\"span\", {\n      className: \"font_size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"by\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"mdc-list-item trends-color top\",\n      target: \"_blank\",\n      href: \"https://twitter.com/SpaceX\",\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"font_size1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" @elonmusk\")))))), React.createElement(Grid, {\n      container: true,\n      spacing: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xl: 6,\n      md: 6,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.TwitterLaunches.map(tweet => React.createElement(\"div\", {\n      key: tweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: tweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tweet_class1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile_image_post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tweet.user.profile_image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"mdc-list-item trends-color\",\n      target: \"_blank\",\n      href: \"http://twitter.com/\" + tweet.user.screen_name,\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"username_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, tweet.user.name)), React.createElement(\"a\", {\n      className: \"mdc-list-item trends-color\",\n      target: \"_blank\",\n      href: \"http://twitter.com/\" + tweet.user.screen_name,\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"@\", tweet.user.screen_name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, tweet.text)), tweet.extended_entities ? React.createElement(\"div\", {\n      className: \"video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, tweet.extended_entities ? React.createElement(\"img\", {\n      className: \"video_height\",\n      src: tweet.extended_entities.media[0].media_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }) : '') : ''))))))), React.createElement(Grid, {\n      item: true,\n      xl: 6,\n      md: 6,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.TwitterMask.map(tweet => React.createElement(\"div\", {\n      key: tweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: tweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tweet_class1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile_image_post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tweet.user.profile_image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"mdc-list-item trends-color\",\n      target: \"_blank\",\n      href: \"http://twitter.com/\" + tweet.user.screen_name,\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"username_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, tweet.user.name)), React.createElement(\"a\", {\n      className: \"mdc-list-item trends-color\",\n      target: \"_blank\",\n      href: \"http://twitter.com/\" + tweet.user.screen_name,\n      \"aria-current\": \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"@\", tweet.user.screen_name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, tweet.text)), tweet.extended_entities ? React.createElement(\"div\", {\n      className: \"video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, tweet.extended_entities ? React.createElement(Player, {\n      className: \"video_height\",\n      src: tweet.extended_entities.media[0].video_info.variants[1].url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }) : '') : '')))))))));\n  }\n\n}\n\nexport default Twitter;","map":{"version":3,"sources":["/var/www/html/spacex-feed-app/client/src/component/Twitter.js"],"names":["React","Component","Grid","API","Player","Twitter","constructor","props","state","TwitterLaunches","TwitterMask","componentDidMount","getTwitterLaunches","then","data","length","setState","err","console","log","catch","status","message","getTwittersLaunches","render","map","tweet","user","profile_image_url","screen_name","name","text","extended_entities","media","media_url","video_info","variants","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport Grid from '@material-ui/core/Grid';\nimport API from '../service/twitter.service.js';\nimport { Player } from 'video-react';\nimport './twitter.css';\nimport './video.css';\n\nclass Twitter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            TwitterLaunches: [],\n            TwitterMask: []\n        }\n    }\n\n    componentDidMount() {\n        /** Twitter Launches spacex */\n        API.getTwitterLaunches()\n            .then((data) => {\n                try {\n                    if (!data.length) {\n                        // Swal.fire('Tweets Not Found....');\n                        this.componentDidMount();\n                    } else {\n                        this.setState({\n                            TwitterLaunches: data\n                        })\n                    }\n                } catch (err) {\n                    console.log(err);\n                }\n                console.log(\"twitter launches====\", this.state.TwitterLaunches);\n            })\n            .catch((err) => {\n                console.log({ status: 500, message: 'Internal Server Error', err });\n            })\n\n        /** Twitter Launches spacex */\n        API.getTwittersLaunches()\n            .then((data) => {\n                try {\n                    if (!data.length) {\n                        // Swal.fire('Tweets Not Found....');\n                        this.componentDidMount();\n                    } else {\n                        this.setState({\n                            TwitterMask: data\n                        })\n                    }\n                } catch (err) {\n                    console.log(err);\n                }\n                console.log(\"twitter mask====\", this.state.TwitterMask);\n            })\n            .catch((err) => {\n                console.log({ status: 500, message: 'Internal Server Error', err });\n            })\n    }\n\n    /** Render-app */\n    render() {\n        return (\n            <div>\n                <Grid container spacing={12}>\n                    <Grid item xl={6} md={6} sm={6} >\n                        <h2>Tweets <span className=\"font_size\">by</span><span><a className=\"mdc-list-item trends-color top\" target=\"_blank\" href=\"https://twitter.com/SpaceX\" aria-current=\"page\">\n                            <span className=\"font_size1\"> @SpaceX</span>\n                        </a></span></h2>\n                    </Grid>\n                    <Grid item xl={6} md={6} sm={6} >\n                        <h2>Tweets <span className=\"font_size\">by</span><span><a className=\"mdc-list-item trends-color top\" target=\"_blank\" href=\"https://twitter.com/SpaceX\" aria-current=\"page\">\n                            <span className=\"font_size1\"> @elonmusk</span>\n                        </a></span></h2>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={12}>\n                    <Grid item xl={6} md={6} sm={6} >\n                        {\n                            this.state.TwitterLaunches.map(tweet =>\n                                <div key={tweet}>\n                                    <div key={tweet}>\n                                        <div className=\"tweet_class1\">\n                                            <Grid container spacing={1}>\n                                                <Grid item sm={2}>\n                                                    <div className=\"profile_image_post\">\n                                                        <img src={tweet.user.profile_image_url} />\n                                                    </div>\n                                                </Grid>\n                                                <Grid item sm={10}>\n                                                    <a className=\"mdc-list-item trends-color\" target=\"_blank\" href={\"http://twitter.com/\" + tweet.user.screen_name} aria-current=\"page\">\n                                                        <span className=\"username_title\">{tweet.user.name}</span>\n                                                    </a>\n                                                    <a className=\"mdc-list-item trends-color\" target=\"_blank\" href={\"http://twitter.com/\" + tweet.user.screen_name} aria-current=\"page\">\n                                                        <span className=\"gray\">@{tweet.user.screen_name}</span>\n                                                    </a>\n                                                    <p><span>{tweet.text}</span></p>\n                                                    {(tweet.extended_entities) ?\n                                                        (<div className=\"video\">\n                                                            {tweet.extended_entities ? (<img className=\"video_height\" src={tweet.extended_entities.media[0].media_url} />) : ('')}\n                                                        </div>) : ('')}\n                                                </Grid>\n                                            </Grid>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </Grid>\n                    <Grid item xl={6} md={6} sm={6}>\n                        {\n                            this.state.TwitterMask.map(tweet =>\n                                <div key={tweet}>\n                                    <div key={tweet}>\n                                        <div className=\"tweet_class1\">\n                                            <Grid container spacing={1}>\n                                                <Grid item sm={2}>\n                                                    <div className=\"profile_image_post\">\n                                                        <img src={tweet.user.profile_image_url} />\n                                                    </div>\n                                                </Grid>\n                                                <Grid item sm={10}>\n                                                    <a className=\"mdc-list-item trends-color\" target=\"_blank\" href={\"http://twitter.com/\" + tweet.user.screen_name} aria-current=\"page\">\n                                                        <span className=\"username_title\">{tweet.user.name}</span>\n                                                    </a>\n                                                    <a className=\"mdc-list-item trends-color\" target=\"_blank\" href={\"http://twitter.com/\" + tweet.user.screen_name} aria-current=\"page\">\n                                                        <span className=\"gray\">@{tweet.user.screen_name}</span>\n                                                    </a>\n                                                    <p><span>{tweet.text}</span></p>\n                                                    {(tweet.extended_entities) ?\n                                                        (<div className=\"video\">\n                                                            {tweet.extended_entities ? (<Player className=\"video_height\" src={tweet.extended_entities.media[0].video_info.variants[1].url}></Player>) : ('')}\n                                                        </div>) : ('')}\n                                                </Grid>\n                                            </Grid>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Twitter;"]},"metadata":{},"sourceType":"module"}