{"ast":null,"code":"var _jsxFileName = \"/var/www/html/spacex-feed-app/client/src/component/twitter/Twitter.js\";\nimport React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport Grid from '@material-ui/core/Grid';\nimport API from '../../service/twitter.service.js';\nimport TweetEmbed from 'react-social-embed';\nimport { Player } from 'video-react';\nimport Swal from 'sweetalert2';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport './twitter.css';\nimport '../video.css';\nimport unregister from '../../intercept.js';\n\nconst Twitters = require('../../tweet.js').Twitters;\n\nconst fs = require('fs');\n\nconst OAuth = require('oauth').OAuth; // const Twit = require('twit');\n// const Twitters = require('twitter-node-client').Twitter;\n// const twitter = new Twitters();\n\n\nconst axios = require('axios');\n\nclass Twitter extends Component {\n  /** constructor call */\n  constructor(props) {\n    super(props);\n    this.state = {\n      TwitterLaunches: [],\n      TwitterMask: [],\n      isLoaded: false,\n      visible: 8\n    };\n    this.loadMore = this.loadMore.bind(this);\n    this.loadMoreButton = this.loadMoreButton.bind(this);\n  }\n  /** First this function call during component render */\n\n\n  componentDidMount() {} // /** spacex all tweets */\n  // API.getTwitterLaunches()\n  //     .then((data) => {\n  //         if (!data.length) {\n  //             Swal.fire('Tweets Not Found....');\n  //             this.componentDidMount();\n  //         } else {\n  //             this.setState({\n  //                 TwitterLaunches: data,\n  //                 isLoaded: true\n  //             })\n  //         }\n  //         // console.log(\"twitter launches====\", this.state.TwitterLaunches);\n  //     })\n  //     .catch((err) => {\n  //         Swal.fire('Tweets Not Found....');\n  //         console.log({ status: 500, message: 'Internal Server Error', err });\n  //     })\n  // /** Elon Mask all tweets */\n  // API.getTwittersLaunches()\n  //     .then((data) => {\n  //         if (!data.length) {\n  //             Swal.fire('Tweets Not Found....');\n  //             this.componentDidMount();\n  //         } else {\n  //             this.setState({\n  //                 TwitterMask: data,\n  //                 isLoaded: true\n  //             })\n  //         }\n  //         // console.log(\"twitter mask====\", this.state.TwitterMask);\n  //     })\n  //     .catch((err) => {\n  //         Swal.fire('Tweets Not Found....');\n  //         console.log({ status: 500, message: 'Internal Server Error', err });\n  //     })\n\n  /** SpaceX load more tweets */\n\n\n  loadMore() {\n    this.setState(prev => {\n      return {\n        visible: prev.visible + 2\n      };\n    });\n  }\n  /** Elonmusk load more tweets */\n\n\n  loadMoreButton() {\n    this.setState(prev => {\n      return {\n        visible: prev.visible + 2\n      };\n    });\n  }\n  /** Render-app */\n\n\n  render() {\n    const isLoaded = this.state.isLoaded;\n\n    if (!isLoaded) {\n      return React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"load\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    } else if (isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"main_tweets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TweetEmbed, {\n        id: \"789107094247051264\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \"/>\"));\n    }\n  }\n\n}\n\nexport default Twitter;","map":{"version":3,"sources":["/var/www/html/spacex-feed-app/client/src/component/twitter/Twitter.js"],"names":["React","Component","Grid","API","TweetEmbed","Player","Swal","Tooltip","Fab","unregister","Twitters","require","fs","OAuth","axios","Twitter","constructor","props","state","TwitterLaunches","TwitterMask","isLoaded","visible","loadMore","bind","loadMoreButton","componentDidMount","setState","prev","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8DAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,kCAAhB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAO,eAAP;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BD,QAA3C;;AACA,MAAME,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAP,CAAiBE,KAA/B,C,CAEA;AACA;AAEA;;;AACA,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMI,OAAN,SAAsBd,SAAtB,CAAgC;AAE5B;AACAe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE,EADR;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,QAAQ,EAAE,KAHD;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACH;AAED;;;AACAE,EAAAA,iBAAiB,GAAG,CAsCnB,CAtCgB,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGJ;;;AACAH,EAAAA,QAAQ,GAAG;AACP,SAAKI,QAAL,CAAeC,IAAD,IAAU;AACpB,aAAO;AAAEN,QAAAA,OAAO,EAAEM,IAAI,CAACN,OAAL,GAAe;AAA1B,OAAP;AACH,KAFD;AAGH;AAED;;;AACAG,EAAAA,cAAc,GAAG;AACb,SAAKE,QAAL,CAAeC,IAAD,IAAU;AACpB,aAAO;AAAEN,QAAAA,OAAO,EAAEM,IAAI,CAACN,OAAL,GAAe;AAA1B,OAAP;AACH,KAFD;AAGH;AAED;;;AACAO,EAAAA,MAAM,GAAG;AAAA,UACGR,QADH,GACgB,KAAKH,KADrB,CACGG,QADH;;AAEL,QAAI,CAACA,QAAL,EAAe;AACX,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH,KAND,MAMO,IAAIA,QAAJ,EAAc;AACjB,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,EAAE,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,OADJ,CADJ;AAQH;AACJ;;AAzF2B;;AA4FhC,eAAeN,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport Grid from '@material-ui/core/Grid';\nimport API from '../../service/twitter.service.js';\nimport TweetEmbed from 'react-social-embed'\nimport { Player } from 'video-react';\nimport Swal from 'sweetalert2';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport './twitter.css';\nimport '../video.css';\nimport unregister from '../../intercept.js';\nconst Twitters = require('../../tweet.js').Twitters;\nconst fs = require('fs');\nconst OAuth = require('oauth').OAuth;\n\n// const Twit = require('twit');\n// const Twitters = require('twitter-node-client').Twitter;\n\n// const twitter = new Twitters();\nconst axios = require('axios');\n\nclass Twitter extends Component {\n\n    /** constructor call */\n    constructor(props) {\n        super(props);\n        this.state = {\n            TwitterLaunches: [],\n            TwitterMask: [],\n            isLoaded: false,\n            visible: 8\n        }\n        this.loadMore = this.loadMore.bind(this);\n        this.loadMoreButton = this.loadMoreButton.bind(this);\n    }\n\n    /** First this function call during component render */\n    componentDidMount() {\n        // /** spacex all tweets */\n        // API.getTwitterLaunches()\n        //     .then((data) => {\n        //         if (!data.length) {\n        //             Swal.fire('Tweets Not Found....');\n        //             this.componentDidMount();\n        //         } else {\n        //             this.setState({\n        //                 TwitterLaunches: data,\n        //                 isLoaded: true\n        //             })\n        //         }\n        //         // console.log(\"twitter launches====\", this.state.TwitterLaunches);\n        //     })\n        //     .catch((err) => {\n        //         Swal.fire('Tweets Not Found....');\n        //         console.log({ status: 500, message: 'Internal Server Error', err });\n        //     })\n\n        // /** Elon Mask all tweets */\n        // API.getTwittersLaunches()\n        //     .then((data) => {\n        //         if (!data.length) {\n        //             Swal.fire('Tweets Not Found....');\n        //             this.componentDidMount();\n        //         } else {\n        //             this.setState({\n        //                 TwitterMask: data,\n        //                 isLoaded: true\n        //             })\n        //         }\n        //         // console.log(\"twitter mask====\", this.state.TwitterMask);\n        //     })\n        //     .catch((err) => {\n        //         Swal.fire('Tweets Not Found....');\n        //         console.log({ status: 500, message: 'Internal Server Error', err });\n        //     })\n    }\n\n    /** SpaceX load more tweets */\n    loadMore() {\n        this.setState((prev) => {\n            return { visible: prev.visible + 2 };\n        });\n    }\n\n    /** Elonmusk load more tweets */\n    loadMoreButton() {\n        this.setState((prev) => {\n            return { visible: prev.visible + 2 };\n        });\n    }\n\n    /** Render-app */\n    render() {\n        const { isLoaded } = this.state;\n        if (!isLoaded) {\n            return (\n                <center>\n                    <div className=\"load\"></div>\n                </center>\n            )\n        } else if (isLoaded) {\n            return (\n                <div className=\"main_tweets\">\n                    <div>\n                        <TweetEmbed id='789107094247051264' />\n                        />\n                </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Twitter;"]},"metadata":{},"sourceType":"module"}