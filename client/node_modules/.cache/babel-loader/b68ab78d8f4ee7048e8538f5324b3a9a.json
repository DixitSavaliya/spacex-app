{"ast":null,"code":"var _jsxFileName = \"/var/www/html/spacex-feed-app/client/src/component/Twitter.js\";\nimport React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport API from '../service/twitter.service';\n\nclass Twitter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TwitterLaunches: []\n    };\n  }\n\n  componentDidMount() {\n    /** Twitter Launches spacex */\n    const searchTweetsObj = {\n      params: {\n        key: SpaceX\n      }\n    };\n    API.getTwitterLaunches(searchTweetsObj).then(data => {\n      try {\n        if (!data.data.length) {\n          Swal.fire('Tweets Not Found....');\n          this.componentDidMount();\n        } else {\n          this.setState({\n            isLoaded: true,\n            TwitterLaunches: data\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      console.log(\"twitter launches====\", this.state.TwitterLaunches);\n    }).catch(err => {\n      console.log({\n        status: 500,\n        message: 'Internal Server Error',\n        err\n      });\n    });\n  }\n  /** Render-app */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Hello\");\n  }\n\n}\n\nexport default Twitter;","map":{"version":3,"sources":["/var/www/html/spacex-feed-app/client/src/component/Twitter.js"],"names":["React","Component","API","Twitter","constructor","props","state","TwitterLaunches","componentDidMount","searchTweetsObj","params","key","SpaceX","getTwitterLaunches","then","data","length","Swal","fire","setState","isLoaded","err","console","log","catch","status","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8DAAP;AACA,OAAOC,GAAP,MAAgB,4BAAhB;;AAIA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAE5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAC;AADP,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMC,eAAe,GAAG;AACpBC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP;AADY,KAAxB;AAGAV,IAAAA,GAAG,CAACW,kBAAJ,CAAuBJ,eAAvB,EACKK,IADL,CACWC,IAAD,IAAU;AACZ,UAAI;AACA,YAAI,CAACA,IAAI,CAACA,IAAL,CAAUC,MAAf,EAAuB;AACnBC,UAAAA,IAAI,CAACC,IAAL,CAAU,sBAAV;AACA,eAAKV,iBAAL;AACH,SAHD,MAGO;AACH,eAAKW,QAAL,CAAc;AACVC,YAAAA,QAAQ,EAAE,IADA;AAEVb,YAAAA,eAAe,EAAEQ;AAFP,WAAd;AAIH;AACJ,OAVD,CAUE,OAAOM,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmC,KAAKjB,KAAL,CAAWC,eAA9C;AACH,KAhBL,EAiBKiB,KAjBL,CAiBYH,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,OAAO,EAAE,uBAAxB;AAAiDL,QAAAA;AAAjD,OAAZ;AACH,KAnBL;AAoBH;AAED;;;AACAM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH;;AA3C2B;;AA8ChC,eAAexB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport \"material-components-web/dist/material-components-web.min.css\";\nimport API from '../service/twitter.service';\n\n\n\nclass Twitter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            TwitterLaunches:[]\n        }\n    }\n\n    componentDidMount() {\n        /** Twitter Launches spacex */\n        const searchTweetsObj = {\n            params: { key: SpaceX }\n        }\n        API.getTwitterLaunches(searchTweetsObj)\n            .then((data) => {\n                try {\n                    if (!data.data.length) {\n                        Swal.fire('Tweets Not Found....');\n                        this.componentDidMount();\n                    } else {\n                        this.setState({\n                            isLoaded: true,\n                            TwitterLaunches: data\n                        })\n                    }\n                } catch (err) {\n                    console.log(err);\n                }\n                console.log(\"twitter launches====\",this.state.TwitterLaunches);\n            })\n            .catch((err) => {\n                console.log({ status: 500, message: 'Internal Server Error', err });\n            })\n    }\n\n    /** Render-app */\n    render() {\n        return (\n            <div>\n                Hello\n           </div>\n        )\n    }\n}\n\nexport default Twitter;"]},"metadata":{},"sourceType":"module"}